{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\Job-Portal-Project\\\\Client\\\\src\\\\components\\\\Auth\\\\ProtectedRoute.js\";\n// import { useContext } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\n// import { AppState } from \"../../App\";\n\n// const ProtectedRoute = ({ children }) => {\n// //  const {user}=useContext(AppState)\n// const token=localStorage.getItem(\"token\")\n//   if (!token) {\n//     // If no token, redirect to login\n//     return <Navigate to=\"/login\" />;\n//   }\n\n//   return children; // Render the children if authenticated\n// };\n\n// export default ProtectedRoute;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAllowed,\n  redirectPath = '/',\n  children\n}) => {\n  if (!isAllowed) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectPath,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return children ? children : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 32\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","jsxDEV","_jsxDEV","ProtectedRoute","isAllowed","redirectPath","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","Outlet","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/Job-Portal-Project/Client/src/components/Auth/ProtectedRoute.js"],"sourcesContent":["// import { useContext } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n// import { AppState } from \"../../App\";\r\n\r\n// const ProtectedRoute = ({ children }) => {\r\n// //  const {user}=useContext(AppState)\r\n// const token=localStorage.getItem(\"token\")\r\n//   if (!token) {\r\n//     // If no token, redirect to login\r\n//     return <Navigate to=\"/login\" />;\r\n//   }\r\n\r\n//   return children; // Render the children if authenticated\r\n// };\r\n\r\n// export default ProtectedRoute;\r\nconst ProtectedRoute = ({  isAllowed,  redirectPath = '/',  children,}) => {\r\n  if (!isAllowed) {\r\n    return <Navigate to={redirectPath} replace />;\r\n  }\r\n\r\n  return children ? children : <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,kBAAkB;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAGC,SAAS;EAAGC,YAAY,GAAG,GAAG;EAAGC;AAAS,CAAC,KAAK;EACzE,IAAI,CAACF,SAAS,EAAE;IACd,oBAAOF,OAAA,CAACF,QAAQ;MAACO,EAAE,EAAEF,YAAa;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/C;EAEA,OAAON,QAAQ,GAAGA,QAAQ,gBAAGJ,OAAA,CAACW,MAAM;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAACE,EAAA,GANIX,cAAc;AAQpB,eAAeA,cAAc;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}