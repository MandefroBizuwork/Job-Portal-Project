{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\Job-Portal-Project\\\\Client\\\\src\\\\components\\\\Auth\\\\ProtectedRoute.js\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const token = localStorage.getItem(\"token\"); // Assuming token is stored in local storage\n  const orginaltoken = us;\n  if (!token) {\n    // If no token, redirect to login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return children; // Render the children if authenticated\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","token","localStorage","getItem","orginaltoken","us","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/Job-Portal-Project/Client/src/components/Auth/ProtectedRoute.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const token = localStorage.getItem(\"token\"); // Assuming token is stored in local storage\r\nconst orginaltoken=us\r\n  if (!token) {\r\n    // If no token, redirect to login\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return children; // Render the children if authenticated\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC/C,MAAMC,YAAY,GAACC,EAAE;EACnB,IAAI,CAACJ,KAAK,EAAE;IACV;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,OAAOV,QAAQ,CAAC,CAAC;AACnB,CAAC;AAACW,EAAA,GATIZ,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}