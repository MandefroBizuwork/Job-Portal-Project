{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\AppleWebsite\\\\Client\\\\src\\\\components\\\\Pages\\\\Main\\\\Index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n// import Video from \"./video/Video\"; // Uncomment if you need this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Index() {\n  _s();\n  const [jobsData, setData] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchJobs = async () => {\n      const api = \"http://localhost:2000/\";\n      try {\n        const response = await fetch(api);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setData(data);\n      } catch (e) {\n        console.error(e.message);\n        setError(\"Failed to fetch jobs. Please try again later.\");\n      }\n    };\n    fetchJobs();\n  }, []); // Empty dependency array to run effect once on mount\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container-fluid my-5\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n  if (jobsData.length === 0) {\n    co;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container-fluid my-5\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No data found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n  // return (\n  //   <>\n  //     <section className=\"container-fluid my-5\">\n  //       <div className=\"search text-center\">\n  //         <h2 className=\"mb-4\">Find Your Dream Job</h2>\n\n  //         <form action=\"#\" method=\"get\">\n  //           <div className=\"row d-inline-flex gx-5\">\n  //             <div className=\"col-md-3 mb-2\">\n  //               <input\n  //                 type=\"text\"\n  //                 className=\"form-control-lg\"\n  //                 name=\"keywords\"\n  //                 placeholder=\"Keywords\"\n  //               />\n  //             </div>\n  //             <div className=\"col-md-3 mb-2\">\n  //               <input\n  //                 type=\"text\"\n  //                 className=\"form-control-lg\"\n  //                 name=\"location\"\n  //                 placeholder=\"Location\"\n  //               />\n  //             </div>\n  //             <div className=\"col-md-3 mb-2\">\n  //               <input\n  //                 type=\"text\"\n  //                 className=\"form-control-lg\"\n  //                 name=\"company\"\n  //                 placeholder=\"Company\"\n  //               />\n  //             </div>\n  //             <div className=\"col-md-2 mb-2\">\n  //               <button type=\"submit\" className=\"btn btn-primary btn-block\">\n  //                 Search\n  //               </button>\n  //             </div>\n  //           </div>\n  //         </form>\n  //       </div>\n  //     </section>\n  //     <section className=\"container-fluid\">\n  //       <div className=\"job-listings\">\n  //         <h2 className=\"text-center mb-4\">Latest Job Listings</h2>\n  //         <hr style={{ width: \"100%\" }} />\n\n  //         <div className=\"row\">\n  //           {jobsData?.map((job, index) => (\n  //             <div className=\"col-md-4\" key={index}>\n  //               <div className=\"card shadow mb-4\">\n  //                 <div className=\"card-header\">\n  //                   <h3>\n  //                     <strong>{job.Jtitle}</strong>\n  //                   </h3>\n  //                 </div>\n  //                 <div className=\"card-body\">\n  //                   <p className=\"card-text\">Company: {job.Company}</p>\n  //                   <p className=\"card-text\">Location: {job.Location}</p>\n  //                   <p className=\"card-text\">Salary: {job.Salary}</p>\n  //                   <p className=\"card-text\">Description: {job.Description}</p>\n  //                   <a href=\"#\" className=\"btn btn-success btn-sm\">\n  //                     Apply Now\n  //                   </a>\n  //                 </div>\n  //               </div>\n  //             </div>\n  //           ))}\n  //         </div>\n  //       </div>\n  //     </section>\n\n  //     <div className=\"p-5 mb-4 bg-light rounded-3\">\n  //       <div className=\"container-fluid py-5\">\n  //         <h1 className=\"display-5 fw-bold\">Custom jumbotron</h1>\n  //         <p className=\"col-md-8 fs-4\">\n  //           Using a series of utilities, you can create this jumbotron, just\n  //           like the one in previous versions of Bootstrap. Check out the\n  //           examples below for how you can remix and restyle it to your liking.\n  //         </p>\n  //         <button className=\"btn btn-primary btn-lg\" type=\"button\">\n  //           Example button\n  //         </button>\n  //       </div>\n  //       {/* <Video /> */}\n  //     </div>\n  //   </>\n  // );\n}\n_s(Index, \"D36q2tGsw5LWhVPhNsr2NJXoSoA=\");\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Index","_s","jobsData","setData","error","setError","fetchJobs","api","response","fetch","ok","Error","status","data","json","e","console","message","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","length","co","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/AppleWebsite/Client/src/components/Pages/Main/Index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import Video from \"./video/Video\"; // Uncomment if you need this component\r\n\r\nfunction Index() {\r\n  const [jobsData, setData] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const api = \"http://localhost:2000/\";\r\n      try {\r\n        const response = await fetch(api);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setData(data);\r\n      } catch (e) {\r\n        console.error(e.message);\r\n        setError(\"Failed to fetch jobs. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []); // Empty dependency array to run effect once on mount\r\n\r\n  if (error) {\r\n    return (\r\n      <section className=\"container-fluid my-5\">\r\n        <h2 style={{ color: \"red\" }}>{error}</h2>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (jobsData.length ===0) {\r\n    co\r\n    return (\r\n      <section className=\"container-fluid my-5\">\r\n        <h2>No data found</h2>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // return (\r\n  //   <>\r\n  //     <section className=\"container-fluid my-5\">\r\n  //       <div className=\"search text-center\">\r\n  //         <h2 className=\"mb-4\">Find Your Dream Job</h2>\r\n\r\n  //         <form action=\"#\" method=\"get\">\r\n  //           <div className=\"row d-inline-flex gx-5\">\r\n  //             <div className=\"col-md-3 mb-2\">\r\n  //               <input\r\n  //                 type=\"text\"\r\n  //                 className=\"form-control-lg\"\r\n  //                 name=\"keywords\"\r\n  //                 placeholder=\"Keywords\"\r\n  //               />\r\n  //             </div>\r\n  //             <div className=\"col-md-3 mb-2\">\r\n  //               <input\r\n  //                 type=\"text\"\r\n  //                 className=\"form-control-lg\"\r\n  //                 name=\"location\"\r\n  //                 placeholder=\"Location\"\r\n  //               />\r\n  //             </div>\r\n  //             <div className=\"col-md-3 mb-2\">\r\n  //               <input\r\n  //                 type=\"text\"\r\n  //                 className=\"form-control-lg\"\r\n  //                 name=\"company\"\r\n  //                 placeholder=\"Company\"\r\n  //               />\r\n  //             </div>\r\n  //             <div className=\"col-md-2 mb-2\">\r\n  //               <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n  //                 Search\r\n  //               </button>\r\n  //             </div>\r\n  //           </div>\r\n  //         </form>\r\n  //       </div>\r\n  //     </section>\r\n  //     <section className=\"container-fluid\">\r\n  //       <div className=\"job-listings\">\r\n  //         <h2 className=\"text-center mb-4\">Latest Job Listings</h2>\r\n  //         <hr style={{ width: \"100%\" }} />\r\n\r\n  //         <div className=\"row\">\r\n  //           {jobsData?.map((job, index) => (\r\n  //             <div className=\"col-md-4\" key={index}>\r\n  //               <div className=\"card shadow mb-4\">\r\n  //                 <div className=\"card-header\">\r\n  //                   <h3>\r\n  //                     <strong>{job.Jtitle}</strong>\r\n  //                   </h3>\r\n  //                 </div>\r\n  //                 <div className=\"card-body\">\r\n  //                   <p className=\"card-text\">Company: {job.Company}</p>\r\n  //                   <p className=\"card-text\">Location: {job.Location}</p>\r\n  //                   <p className=\"card-text\">Salary: {job.Salary}</p>\r\n  //                   <p className=\"card-text\">Description: {job.Description}</p>\r\n  //                   <a href=\"#\" className=\"btn btn-success btn-sm\">\r\n  //                     Apply Now\r\n  //                   </a>\r\n  //                 </div>\r\n  //               </div>\r\n  //             </div>\r\n  //           ))}\r\n  //         </div>\r\n  //       </div>\r\n  //     </section>\r\n\r\n  //     <div className=\"p-5 mb-4 bg-light rounded-3\">\r\n  //       <div className=\"container-fluid py-5\">\r\n  //         <h1 className=\"display-5 fw-bold\">Custom jumbotron</h1>\r\n  //         <p className=\"col-md-8 fs-4\">\r\n  //           Using a series of utilities, you can create this jumbotron, just\r\n  //           like the one in previous versions of Bootstrap. Check out the\r\n  //           examples below for how you can remix and restyle it to your liking.\r\n  //         </p>\r\n  //         <button className=\"btn btn-primary btn-lg\" type=\"button\">\r\n  //           Example button\r\n  //         </button>\r\n  //       </div>\r\n  //       {/* <Video /> */}\r\n  //     </div>\r\n  //   </>\r\n  // );\r\n}\r\n\r\nexport default Index;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,GAAG,GAAG,wBAAwB;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCX,OAAO,CAACU,IAAI,CAAC;MACf,CAAC,CAAC,OAAOE,CAAC,EAAE;QACVC,OAAO,CAACZ,KAAK,CAACW,CAAC,CAACE,OAAO,CAAC;QACxBZ,QAAQ,CAAC,+CAA+C,CAAC;MAC3D;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIF,KAAK,EAAE;IACT,oBACEL,OAAA;MAASmB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACvCpB,OAAA;QAAIqB,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAF,QAAA,EAAEf;MAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEd;EAEA,IAAIvB,QAAQ,CAACwB,MAAM,KAAI,CAAC,EAAE;IACxBC,EAAE;IACF,oBACE5B,OAAA;MAASmB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACvCpB,OAAA;QAAAoB,QAAA,EAAI;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAEd;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACxB,EAAA,CA/HQD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAiId,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}