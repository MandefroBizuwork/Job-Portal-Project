{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\Job-Portal-Project\\\\Client\\\\src\\\\components\\\\Auth\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// ProtectedRoute.js\n\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const response = await fetch('http://localhost:2000/api/protected', {\n          credentials: 'include' // Send cookies with request\n        });\n        setIsAuthenticated(response.ok);\n      } catch (error) {\n        setIsAuthenticated(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this); // Show loading state while checking auth\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 41\n  }, this);\n}\n_s(ProtectedRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","setIsAuthenticated","checkAuth","response","fetch","credentials","ok","error","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/Job-Portal-Project/Client/src/components/Auth/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nfunction ProtectedRoute({ children }) {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const checkAuth = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:2000/api/protected', {\r\n                    credentials: 'include' // Send cookies with request\r\n                });\r\n                setIsAuthenticated(response.ok);\r\n            } catch (error) {\r\n                setIsAuthenticated(false);\r\n            }\r\n        };\r\n        checkAuth();\r\n    }, []);\r\n\r\n    if (isAuthenticated === null) {\r\n        return <div>Loading...</div>; // Show loading state while checking auth\r\n    }\r\n\r\n    return isAuthenticated ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZ,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAChEC,WAAW,EAAE,SAAS,CAAC;QAC3B,CAAC,CAAC;QACFJ,kBAAkB,CAACE,QAAQ,CAACG,EAAE,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZN,kBAAkB,CAAC,KAAK,CAAC;MAC7B;IACJ,CAAC;IACDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE;IAC1B,oBAAOJ,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,OAAOX,eAAe,GAAGF,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACkB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE;AAACZ,EAAA,CAtBQF,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAwBvB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}