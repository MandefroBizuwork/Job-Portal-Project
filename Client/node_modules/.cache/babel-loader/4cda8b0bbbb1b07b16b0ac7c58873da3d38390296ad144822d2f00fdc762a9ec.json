{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\Job-Portal-Project\\\\Client\\\\src\\\\components\\\\UserProfile\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imagedata, setImagesData] = useState();\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        const response = await fetch(\"http://localhost:300/\");\n        const data = await response.json();\n        if (response.ok) {\n          setImagesData(data);\n          console.log(imagedata);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    loadImage();\n  }, []);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myimage\", file);\n    try {\n      const response = await fetch(\"http://localhost:300/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        console.log(\"Image posted successfully!\");\n        // Re-fetch the image data to update the displayed image\n        const updatedResponse = await fetch(\"http://localhost:300/\");\n        const updatedData = await updatedResponse.json();\n        setImagesData(updatedData);\n      } else {\n        console.log(\"An error occurred.\");\n      }\n    } catch (err) {\n      console.log(\"An unexpected error occurred.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"myimage\",\n        children: \"Upload image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"myimage\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"EYSdVyZSKxHDi7LjcYcTOZIpO/A=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ImageUpload","_s","file","setFile","imagedata","setImagesData","loadImage","response","fetch","data","json","ok","console","log","err","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","method","body","updatedResponse","updatedData","error","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/Job-Portal-Project/Client/src/components/UserProfile/ImageUpload.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst ImageUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [imagedata, setImagesData] = useState();\r\n\r\n  useEffect(() => {\r\n    const loadImage = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:300/\");\r\n        const data = await response.json();\r\n        if(response.ok){\r\n          setImagesData(data)\r\n         console.log(imagedata)\r\n        }\r\n       \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    loadImage();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"myimage\", file);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:300/upload\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Image posted successfully!\");\r\n        // Re-fetch the image data to update the displayed image\r\n        const updatedResponse = await fetch(\"http://localhost:300/\");\r\n        const updatedData = await updatedResponse.json();\r\n        setImagesData(updatedData);\r\n      } else {\r\n        console.log(\"An error occurred.\");\r\n      }\r\n    } catch (err) {\r\n      console.log(\"An unexpected error occurred.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"myimage\">Upload image</label>\r\n        <input type=\"file\" name=\"myimage\" onChange={handleFileChange} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {/* {imagedata ? (\r\n        <img src={`http://localhost:300/images/${imagedata.image}`} alt=\"Uploaded\" />\r\n      ) : null} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}