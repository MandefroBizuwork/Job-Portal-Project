{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\Job-Portal-Project\\\\Client\\\\src\\\\components\\\\Pages\\\\JobPage\\\\ManageJob.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\n// import SelfCloseModalAlert from \"./SelfCloseModalAlert\";\nimport SelfClosingAlert from \"./SelfClosingAlert\";\nimport { Pagination } from \"react-bootstrap\";\nimport JobModal from \"./JobComponent/JobModal\";\n// const API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:2000/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageJob() {\n  _s();\n  const [showModal, setShow] = useState(false);\n  const [modalType, setModalType] = useState(\"create\");\n  const [SlectedJob, setSelectedJob] = useState({});\n  const [SlectedJob_ID, setSlectedJob_ID] = useState(null);\n  const [jobsData, SetJobs] = useState([]);\n  // const [values, setValues] = useState({\n  //   Company: \"\",\n  //   Description: \"\",\n  //   Jtitle: \"\",\n  //   Location: \"\",\n  //   Salary: \"\",\n  // });\n  // const [errors, setErrors] = useState({});\n  // const [message, setMessage] = useState(\"\");\n  // const [err, setError] = useState(false);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:2000/\");\n      const data = await response.json();\n      SetJobs(data.Jobs || []);\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n    const startIndex = (currentPage - 1) * rowsPerPage;\n    setcurrentData(jobsData.slice(startIndex, startIndex + rowsPerPage));\n  }, [currentPage, jobsData]);\n  // pagination\n  var rowsPerPage = 2;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentData] = use;\n  const totalPages = Math.ceil(jobsData.length / rowsPerPage);\n\n  // Function to change the page\n  const changePage = newPage => {\n    if (newPage > 0 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  const renderPaginationItems = () => {\n    const items = [];\n    const maxVisiblePages = 2; // Number of pages to show near the current page\n\n    for (let page = 1; page <= totalPages; page++) {\n      if (page === 1 ||\n      // First page\n      page === totalPages ||\n      // Last page\n      page >= currentPage - maxVisiblePages && page <= currentPage + maxVisiblePages // Pages near the current page\n      ) {\n        items.push(/*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: page === currentPage,\n          onClick: () => changePage(page),\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this));\n      } else if (page === currentPage - maxVisiblePages - 1 ||\n      // Before the range of current page\n      page === currentPage + maxVisiblePages + 1 // After the range of current page\n      ) {\n        items.push(/*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {\n          disabled: true\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 24\n        }, this));\n      }\n    }\n    return items;\n  };\n  //end of pagination\n  const handleClose = () => {\n    setSelectedJob({});\n    fetchJobs();\n    setShow(false);\n  };\n  const ShowPostModal = () => {\n    setShow(true);\n    setModalType(\"create\");\n    // setValues({\n    //   Company: \"\",\n    //   Description: \"\",\n    //   Jtitle: \"\",\n    //   Location: \"\",\n    //   Salary: \"\",\n    // });\n  };\n  const ShowUpdateModal = (item, id) => {\n    setShow(true);\n    setModalType(\"update\");\n    setSelectedJob({\n      Company: item.COMPANY,\n      Description: item.DESCRIPTION,\n      Jtitle: item.JOB_TITLE,\n      Location: item.LOCATION,\n      Salary: item.SALARY\n    });\n    setSlectedJob_ID(id);\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [jobIdToDelete, setJobIdToDelete] = useState(null);\n  const [DeletMessage, setDeletMessage] = useState(null);\n  const handlDeleteClick = jobid => {\n    setIsModalOpen(true); // // Open the confirmation modal\n    setJobIdToDelete(jobid);\n    //const isConfirmed = confirm(\"Are you sure you want to delete this job?\");\n  };\n  const handleCancelDelete = () => {\n    setIsModalOpen(false); // Close the modal without deleting\n  };\n\n  //self closing modal logic\n  const [SelfModalOpen, setSelfModalOpen] = useState(false);\n  // const [SelfModalClose, setSelfModalClose] = useState(false);\n\n  const handleSelfClose = () => setSelfModalOpen(false);\n  //\n  const handleConfirmDelete = async () => {\n    setIsModalOpen(false);\n    try {\n      const response = await fetch(`http://localhost:2000/ManageJobs/DeleteJob/${jobIdToDelete}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setDeletMessage(\"Job deleted successfully:\");\n        setSelfModalOpen(true);\n        fetchJobs();\n      } else {\n        setDeletMessage(\"Failed to delete the job:\", response.statusText);\n      }\n    } catch (error) {\n      setDeletMessage(\"Error during deletion:\", error);\n    }\n  };\n\n  // // Usage example\n  // deleteJob(1); // Pass the job ID you want to delete\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid pt-5 \",\n    style: {\n      marginTop: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container bg-light clearfix container\",\n      children: [/*#__PURE__*/_jsxDEV(SelfClosingAlert, {\n        show: SelfModalOpen,\n        onClose: handleSelfClose,\n        message: DeletMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: \"right\"\n        },\n        className: \"btn btn-success\",\n        onClick: ShowPostModal,\n        children: \"Add new Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(JobModal, {\n        modalType: modalType,\n        showModal: showModal,\n        handleClose: handleClose,\n        SlectedJob: SlectedJob,\n        id: SlectedJob_ID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container shadow bg-light container \",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          style: {\n            backgroundColor: \"lightgray\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Job ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"table-group-divider\",\n          children: currentData && currentData.length > 0 ? currentData.map((item, index) => item ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: (currentPage - 1) * rowsPerPage + index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.JOB_ID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.JOB_TITLE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.COMPANY\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.LOCATION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.SALARY\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.DESCRIPTION\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                display: \"Flex\",\n                columnGap: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                className: \"btn btn-success\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => ShowUpdateModal(item, item.JOB_ID),\n                className: \"btn btn-warning\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => handlDeleteClick(item.JOB_ID),\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }, this)]\n          }, item.JOB_ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this) : null) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"8\",\n              className: \"text-center\",\n              children: \"No jobs available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: \"justify-content-center\",\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n          onClick: () => changePage(currentPage - 1),\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), renderPaginationItems(), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n          onClick: () => changePage(currentPage + 1),\n          disabled: currentPage === totalPages,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n        isOpen: isModalOpen,\n        onConfirm: handleConfirmDelete,\n        onCancel: handleCancelDelete,\n        message: DeletMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }, this);\n}\n_s(ManageJob, \"3QiQJS6JT7i8ruweHO+gOZ2Nhcw=\");\n_c = ManageJob;\nexport default ManageJob;\nvar _c;\n$RefreshReg$(_c, \"ManageJob\");","map":{"version":3,"names":["React","useState","useEffect","Link","Button","ConfirmDeleteModal","SelfClosingAlert","Pagination","JobModal","jsxDEV","_jsxDEV","ManageJob","_s","showModal","setShow","modalType","setModalType","SlectedJob","setSelectedJob","SlectedJob_ID","setSlectedJob_ID","jobsData","SetJobs","fetchJobs","response","fetch","data","json","Jobs","error","console","startIndex","currentPage","rowsPerPage","setcurrentData","slice","setCurrentPage","currentData","use","totalPages","Math","ceil","length","changePage","newPage","renderPaginationItems","items","maxVisiblePages","page","push","Item","active","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Ellipsis","disabled","handleClose","ShowPostModal","ShowUpdateModal","item","id","Company","COMPANY","Description","DESCRIPTION","Jtitle","JOB_TITLE","Location","LOCATION","Salary","SALARY","isModalOpen","setIsModalOpen","jobIdToDelete","setJobIdToDelete","DeletMessage","setDeletMessage","handlDeleteClick","jobid","handleCancelDelete","SelfModalOpen","setSelfModalOpen","handleSelfClose","handleConfirmDelete","method","headers","ok","statusText","className","style","marginTop","show","onClose","message","float","backgroundColor","scope","map","index","JOB_ID","display","columnGap","colSpan","size","First","Prev","Next","Last","isOpen","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/Job-Portal-Project/Client/src/components/Pages/JobPage/ManageJob.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\r\n// import SelfCloseModalAlert from \"./SelfCloseModalAlert\";\r\nimport SelfClosingAlert from \"./SelfClosingAlert\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport JobModal from \"./JobComponent/JobModal\";\r\n// const API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:2000/\";\r\n\r\nfunction ManageJob() {\r\n  const [showModal, setShow] = useState(false);\r\n  const [modalType, setModalType] = useState(\"create\");\r\n  const [SlectedJob, setSelectedJob] = useState({});\r\n  const [SlectedJob_ID, setSlectedJob_ID] = useState(null);\r\n  const [jobsData, SetJobs] = useState([]);\r\n  // const [values, setValues] = useState({\r\n  //   Company: \"\",\r\n  //   Description: \"\",\r\n  //   Jtitle: \"\",\r\n  //   Location: \"\",\r\n  //   Salary: \"\",\r\n  // });\r\n  // const [errors, setErrors] = useState({});\r\n  // const [message, setMessage] = useState(\"\");\r\n  // const [err, setError] = useState(false);\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:2000/\");\r\n      const data = await response.json();\r\n      SetJobs(data.Jobs || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchJobs();\r\n    const startIndex = (currentPage - 1) * rowsPerPage;\r\n    setcurrentData(jobsData.slice(startIndex, startIndex + rowsPerPage));\r\n  }, [currentPage, jobsData]);\r\n  // pagination\r\n  var rowsPerPage = 2;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n\r\n\r\n\r\n\r\n  const [currentData]=use\r\n  const totalPages = Math.ceil(jobsData.length / rowsPerPage);\r\n\r\n \r\n \r\n\r\n  // Function to change the page\r\n  const changePage = (newPage) => {\r\n    if (newPage > 0 && newPage <= totalPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n  const renderPaginationItems = () => {\r\n    const items = [];\r\n    const maxVisiblePages = 2; // Number of pages to show near the current page\r\n\r\n    for (let page = 1; page <= totalPages; page++) {\r\n        if (\r\n            page === 1 || // First page\r\n            page === totalPages || // Last page\r\n            (page >= currentPage - maxVisiblePages && page <= currentPage + maxVisiblePages) // Pages near the current page\r\n        ) {\r\n            items.push(\r\n                <Pagination.Item\r\n                  \r\n                    key={page}\r\n                    active={page === currentPage}\r\n                    onClick={() => changePage(page)}\r\n                >\r\n                    {page}\r\n                </Pagination.Item>\r\n            );\r\n        } else if (\r\n            page === currentPage - maxVisiblePages - 1 || // Before the range of current page\r\n            page === currentPage + maxVisiblePages + 1 // After the range of current page\r\n        ) {\r\n            items.push(<Pagination.Ellipsis key={page} disabled />);\r\n        }\r\n    }\r\n\r\n    return items;\r\n};\r\n  //end of pagination\r\n  const handleClose = () => {\r\n    setSelectedJob({});\r\n    fetchJobs();\r\n    setShow(false);\r\n  };\r\n\r\n  const ShowPostModal = () => {\r\n    setShow(true);\r\n    setModalType(\"create\");\r\n    // setValues({\r\n    //   Company: \"\",\r\n    //   Description: \"\",\r\n    //   Jtitle: \"\",\r\n    //   Location: \"\",\r\n    //   Salary: \"\",\r\n    // });\r\n  };\r\n\r\n  const ShowUpdateModal = (item,id) => {\r\n    setShow(true);\r\n    setModalType(\"update\");\r\n    setSelectedJob({\r\n      Company: item.COMPANY,\r\n      Description: item.DESCRIPTION,\r\n      Jtitle: item.JOB_TITLE,\r\n      Location: item.LOCATION,\r\n      Salary: item.SALARY,\r\n    });\r\nsetSlectedJob_ID(id)\r\n   \r\n  };\r\n\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [jobIdToDelete, setJobIdToDelete] = useState(null);\r\n  const [DeletMessage, setDeletMessage] = useState(null);\r\n\r\n  const handlDeleteClick = (jobid) => {\r\n    setIsModalOpen(true); // // Open the confirmation modal\r\n    setJobIdToDelete(jobid);\r\n    //const isConfirmed = confirm(\"Are you sure you want to delete this job?\");\r\n  };\r\n  const handleCancelDelete = () => {\r\n    setIsModalOpen(false); // Close the modal without deleting\r\n  };\r\n\r\n  //self closing modal logic\r\n  const [SelfModalOpen, setSelfModalOpen] = useState(false);\r\n  // const [SelfModalClose, setSelfModalClose] = useState(false);\r\n\r\n  const handleSelfClose = () => setSelfModalOpen(false);\r\n  //\r\n  const handleConfirmDelete = async () => {\r\n    setIsModalOpen(false);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:2000/ManageJobs/DeleteJob/${jobIdToDelete}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDeletMessage(\"Job deleted successfully:\");\r\n        setSelfModalOpen(true);\r\n        fetchJobs();\r\n      } else {\r\n        setDeletMessage(\"Failed to delete the job:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      setDeletMessage(\"Error during deletion:\", error);\r\n    }\r\n  };\r\n\r\n  // // Usage example\r\n  // deleteJob(1); // Pass the job ID you want to delete\r\n\r\n\r\n    return (\r\n      <div className=\"container-fluid pt-5 \" style={{ marginTop: \"100px\" }}>\r\n        <div className=\"modal-container bg-light clearfix container\">\r\n          <SelfClosingAlert\r\n            show={SelfModalOpen}\r\n            onClose={handleSelfClose}\r\n            message={DeletMessage}\r\n          />\r\n          <Button\r\n            style={{ float: \"right\" }}\r\n            className=\"btn btn-success\"\r\n            onClick={ShowPostModal}\r\n          >\r\n            Add new Job\r\n          </Button>\r\n        <JobModal\r\n      \r\n          modalType= {modalType}\r\n          showModal={showModal}\r\n        \r\n          handleClose={handleClose}\r\n          SlectedJob={SlectedJob}\r\n          id={SlectedJob_ID}\r\n         \r\n        />\r\n         \r\n        </div>\r\n\r\n        <div className=\"table-container shadow bg-light container \">\r\n          <table className=\"table table-striped table-hover\">\r\n            <thead style={{backgroundColor:\"lightgray\"}}>\r\n              <tr>\r\n                <th scope=\"col\">No</th>\r\n                <th scope=\"col\">Job ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Company</th>\r\n                <th scope=\"col\">Location</th>\r\n                <th scope=\"col\">Salary</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-group-divider\">\r\n              {currentData && currentData.length > 0 ? (\r\n                currentData.map((item, index) =>\r\n                  item ? (\r\n                    <tr key={item.JOB_ID}>\r\n                      <td>{(currentPage - 1) * rowsPerPage + index + 1}</td>\r\n                      <td>{item.JOB_ID}</td>\r\n                      <td>{item.JOB_TITLE}</td>\r\n                      <td>{item.COMPANY}</td>\r\n                      <td>{item.LOCATION}</td>\r\n                      <td>{item.SALARY}</td>\r\n                      <td>{item.DESCRIPTION}</td>\r\n                      <td style={{ display: \"Flex\", columnGap: \"10px\" }}>\r\n                        <Link className=\"btn btn-success\">View</Link>\r\n                        <button\r\n                          onClick={() => ShowUpdateModal(item,item.JOB_ID)}\r\n                          className=\"btn btn-warning\"\r\n                        >\r\n                          Update\r\n                        </button>\r\n                        <Link\r\n                          onClick={() => handlDeleteClick(item.JOB_ID)}\r\n                          className=\"btn btn-danger\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ) : null\r\n                )\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"8\" className=\"text-center\">\r\n                    No jobs available.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n\r\n          <Pagination className=\"justify-content-center\"  size=\"lg\">\r\n          <Pagination.First disabled={true} />\r\n            <Pagination.Prev\r\n                onClick={() => changePage(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n            >\r\n                Previous\r\n            </Pagination.Prev>\r\n\r\n            {renderPaginationItems()}\r\n\r\n            <Pagination.Next\r\n                onClick={() => changePage(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n            >\r\n                Next\r\n            </Pagination.Next>\r\n            <Pagination.Last disabled={true} />\r\n        </Pagination>\r\n          <ConfirmDeleteModal \r\n            isOpen={isModalOpen}\r\n            onConfirm={handleConfirmDelete}\r\n            onCancel={handleCancelDelete}\r\n            message={DeletMessage}\r\n          />\r\n\r\n          {/* <SelfCloseModalAlert\r\n            showModal={SelfModalOpen}\r\n            onClose={handleSelfClose}\r\n          \r\n          \r\n          /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ManageJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}