{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\AppleWebsite\\\\Client\\\\src\\\\components\\\\Pages\\\\JobPage\\\\PostJob.js\";\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// function PostJob() {\n//   const [values, setValues] = useState({\n//     Company: \"\",\n//     Description: \"\",\n//     Jtitle: \"\",\n//     Location: \"\",\n//     Salary: \"\",\n//   });\n//   const handleChange = (e) => {\n//     setValues({ ...values, [e.target.name]: [e.target.value] });\n//   };\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     fetch(\"http://localhost:2000/PostJob\", {\n//       method: \"post\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\"Data\":\"my data\"})\n//     })\n//       .then(() => console.log(\"OK!\")) /* TODO: add logic for handling success registration */\n//       .catch((error) => console.error(error) /* TODO: add logic for handling errors */)\n//   }\n\n//   return (\n//     <div className=\"container bg-light shadow\">\n//       <h2>Post a Job</h2>\n//       <form onSubmit={handleSubmit} className=\"row col-md-5\"  method=\"post\">\n//         <div>\n//           <label>Company:</label>\n//           <input\n//             className=\"form-control\"\n//             type=\"text\"\n//             name=\"Company\"\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Description:</label>\n//           <input\n//             className=\"form-control\"\n//             type=\"text\"\n//             name=\"Description\"\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Job Title:</label>\n//           <input\n//             className=\"form-control\"\n//             type=\"text\"\n//             name=\"Jtitle\"\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Location:</label>\n//           <input\n//             className=\"form-control\"\n//             type=\"text\"\n//             name=\"Location\"\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Salary:</label>\n//           <input\n//             className=\"form-control\"\n//             type=\"number\"\n//             name=\"Salary\"\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div className=\"mt-4\">\n//           <input className=\"btn btn-primary form-control\" type=\"submit\" value=\"Register\"/>\n\n//         </div>\n//       </form>\n\n//       {/* Display success or error message */}\n//       {/* {message && <p style={{ color: error ? \"red\" : \"green\" }}>{message}</p>} */}\n//     </div>\n//   );\n// }\n\n// export default PostJob;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage() {\n  function submitCredentials(e) {\n    // prevent default form action from submitting data\n    e.preventDefault();\n\n    // convert fields from form to FormData object\n    const formData = new FormData(e.target);\n\n    // convert FormData to simple object, which can be serialized to JSON\n    let data = {};\n    formData.forEach((value, key) => data[key] = value);\n\n    // change /api/endpoint to your API\n    fetch(\"http://localhost:2000/PostJob\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(() => console.log(\"OK!\") /* TODO: add logic for handling success registration */).catch(error => console.error(error) /* TODO: add logic for handling errors */);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      method: \"post\",\n      onSubmit: submitCredentials,\n      style: {\n        margi\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstNameInputField\",\n        children: \"First Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        id: \"firstNameInputField\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastNameInputField\",\n        children: \"Last Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        id: \"lastNameInputField\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpPage","submitCredentials","e","preventDefault","formData","FormData","target","data","forEach","value","key","fetch","method","headers","body","JSON","stringify","then","console","log","catch","error","children","autoComplete","onSubmit","style","margi","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/AppleWebsite/Client/src/components/Pages/JobPage/PostJob.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function PostJob() {\r\n//   const [values, setValues] = useState({\r\n//     Company: \"\",\r\n//     Description: \"\",\r\n//     Jtitle: \"\",\r\n//     Location: \"\",\r\n//     Salary: \"\",\r\n//   });\r\n//   const handleChange = (e) => {\r\n//     setValues({ ...values, [e.target.name]: [e.target.value] });\r\n//   };\r\n//   function handleSubmit(e) {\r\n//     e.preventDefault();\r\n//     fetch(\"http://localhost:2000/PostJob\", {\r\n//       method: \"post\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify({\"Data\":\"my data\"})\r\n//     })\r\n//       .then(() => console.log(\"OK!\")) /* TODO: add logic for handling success registration */\r\n//       .catch((error) => console.error(error) /* TODO: add logic for handling errors */)\r\n//   }\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div className=\"container bg-light shadow\">\r\n//       <h2>Post a Job</h2>\r\n//       <form onSubmit={handleSubmit} className=\"row col-md-5\"  method=\"post\">\r\n//         <div>\r\n//           <label>Company:</label>\r\n//           <input\r\n//             className=\"form-control\"\r\n//             type=\"text\"\r\n//             name=\"Company\"\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Description:</label>\r\n//           <input\r\n//             className=\"form-control\"\r\n//             type=\"text\"\r\n//             name=\"Description\"\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Job Title:</label>\r\n//           <input\r\n//             className=\"form-control\"\r\n//             type=\"text\"\r\n//             name=\"Jtitle\"\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Location:</label>\r\n//           <input\r\n//             className=\"form-control\"\r\n//             type=\"text\"\r\n//             name=\"Location\"\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div>\r\n//           <label>Salary:</label>\r\n//           <input\r\n//             className=\"form-control\"\r\n//             type=\"number\"\r\n//             name=\"Salary\"\r\n//             onChange={handleChange}\r\n//             required\r\n//           />\r\n//         </div>\r\n//         <div className=\"mt-4\">\r\n//           <input className=\"btn btn-primary form-control\" type=\"submit\" value=\"Register\"/>\r\n            \r\n          \r\n//         </div>\r\n//       </form>\r\n\r\n//       {/* Display success or error message */}\r\n//       {/* {message && <p style={{ color: error ? \"red\" : \"green\" }}>{message}</p>} */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PostJob;\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nexport default function SignUpPage() {\r\n  function submitCredentials(e) {\r\n    // prevent default form action from submitting data\r\n    e.preventDefault();\r\n\r\n    // convert fields from form to FormData object\r\n    const formData = new FormData(e.target)\r\n\r\n    // convert FormData to simple object, which can be serialized to JSON\r\n    let data = {}\r\n    formData.forEach((value, key) => data[key] = value);\r\n\r\n    // change /api/endpoint to your API\r\n    fetch(\"http://localhost:2000/PostJob\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(() => console.log(\"OK!\") /* TODO: add logic for handling success registration */)\r\n      .catch((error) => console.error(error) /* TODO: add logic for handling errors */)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form autoComplete=\"off\" method=\"post\" onSubmit={submitCredentials}  style={{margi}}>\r\n        <label htmlFor=\"firstNameInputField\">First Name: </label>\r\n        <input type=\"text\" name=\"firstName\" id=\"firstNameInputField\" />\r\n        <br />\r\n        <label htmlFor=\"lastNameInputField\">Last Name: </label>\r\n        <input type=\"text\" name=\"lastName\" id=\"lastNameInputField\" />\r\n        <br />\r\n\r\n        <input type=\"submit\" value=\"Submit\"/>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,SAASC,iBAAiBA,CAACC,CAAC,EAAE;IAC5B;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;;IAEvC;IACA,IAAIC,IAAI,GAAG,CAAC,CAAC;IACbH,QAAQ,CAACI,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAKH,IAAI,CAACG,GAAG,CAAC,GAAGD,KAAK,CAAC;;IAEnD;IACAE,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;IAC3B,CAAC,CAAC,CACCU,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC,CAAC,uDAAuD,CAAC,CACtFC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC,yCAAyC,CAAC;EACrF;EAEA,oBACExB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACEzB,OAAA;MAAM0B,YAAY,EAAC,KAAK;MAACX,MAAM,EAAC,MAAM;MAACY,QAAQ,EAAEvB,iBAAkB;MAAEwB,KAAK,EAAE;QAACC;MAAK,CAAE;MAAAJ,QAAA,gBAClFzB,OAAA;QAAO8B,OAAO,EAAC,qBAAqB;QAAAL,QAAA,EAAC;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzDlC,OAAA;QAAOmC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,WAAW;QAACC,EAAE,EAAC;MAAqB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlC,OAAA;QAAO8B,OAAO,EAAC,oBAAoB;QAAAL,QAAA,EAAC;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvDlC,OAAA;QAAOmC,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,EAAE,EAAC;MAAoB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENlC,OAAA;QAAOmC,IAAI,EAAC,QAAQ;QAACvB,KAAK,EAAC;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC,gBACP,CAAC;AAEP;AAACI,EAAA,GAtCuBnC,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}