{"ast":null,"code":"var _jsxFileName = \"G:\\\\MYL software company\\\\Full-FrontEnd_and BackEnd-Project\\\\Job-Portal-Project\\\\Client\\\\src\\\\components\\\\Pages\\\\JobPage\\\\ManageJob.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\n// import SelfCloseModalAlert from \"./SelfCloseModalAlert\";\nimport SelfClosingAlert from \"./SelfClosingAlert\";\nimport { Pagination } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageJob() {\n  _s();\n  const [showModal, setShow] = useState(false);\n  const [modalType, setModalType] = useState(\"create\");\n  const [selectedJob, setSelectedJob] = useState({});\n  const [jobsData, SetJobs] = useState([]);\n  const [values, setValues] = useState({\n    Company: \"\",\n    Description: \"\",\n    Jtitle: \"\",\n    Location: \"\",\n    Salary: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [err, setError] = useState(false);\n  useEffect(() => {\n    const api = \"http://localhost:2000/\";\n    fetch(api).then(response => response.json()).then(data => {\n      const jobsData = data.Jobs || [];\n      SetJobs(jobsData);\n    }).catch(e => {\n      console.error(e.message);\n    });\n  }, []);\n  // pagination\n  var rowsPerPage = 10;\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = Math.ceil(jobsData.length / rowsPerPage);\n\n  // Calculate the data for the current page\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const currentData = jobsData.slice(startIndex, startIndex + rowsPerPage);\n\n  // Function to change the page\n  const changePage = newPage => {\n    if (newPage > 0 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  //end of pagination\n  const handleClose = () => {\n    setSelectedJob({});\n    setValues({\n      Company: \"\",\n      Description: \"\",\n      Jtitle: \"\",\n      Location: \"\",\n      Salary: \"\"\n    });\n    setShow(false);\n  };\n  const ShowPostModal = () => {\n    setShow(true);\n    setModalType(\"create\");\n    setValues({\n      Company: \"\",\n      Description: \"\",\n      Jtitle: \"\",\n      Location: \"\",\n      Salary: \"\"\n    });\n  };\n  const ShowUpdateModal = item => {\n    setShow(true);\n    setModalType(\"update\");\n    setSelectedJob(item);\n    setValues({\n      Company: item.COMPANY,\n      Description: item.DESCRIPTION,\n      Jtitle: item.JOB_TITLE,\n      Location: item.LOCATION,\n      Salary: item.SALARY\n    });\n  };\n  const handleChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validate = () => {\n    let errors = {};\n    if (!values.Company.trim()) errors.Company = \"Company name is required.\";\n    if (!values.Description.trim()) errors.Description = \"Description is required.\";\n    if (!values.Jtitle.trim()) errors.Jtitle = \"Job title is required.\";\n    if (!values.Location.trim()) errors.Location = \"Location is required.\";\n    if (!values.Salary || isNaN(values.Salary) || values.Salary <= 0) errors.Salary = \"Salary must be a positive number.\";\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const url = modalType === \"create\" ? \"http://localhost:2000/ManageJobs/PostJob\" : `http://localhost:2000/ManageJobs/UpdateJob/${selectedJob.JOB_ID}`;\n        const method = modalType === \"create\" ? \"POST\" : \"PUT\"; // Assuming you have a PUT endpoint for updates\n        const response = await fetch(url, {\n          method: method,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(values)\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setMessage(modalType === \"create\" ? \"Job posted successfully!\" : \"Job updated successfully!\");\n          setError(false);\n          // Refresh the job list or update state\n          if (modalType === \"create\") {\n            SetJobs(prevJobs => [...prevJobs, data.job]); // Assuming your API returns the created job\n          } else {\n            SetJobs(prevJobs => prevJobs.map(job => job.JOB_ID === selectedJob.JOB_ID ? values : job));\n          }\n        } else {\n          setMessage(data.message || \"An error occurred.\");\n          setError(true);\n        }\n      } catch (err) {\n        setMessage(\"An unexpected error occurred.\");\n        setError(true);\n        console.error(err);\n      }\n    } else {\n      setMessage(\"Please fix the errors and submit again.\");\n      setError(true);\n    }\n  };\n\n  //for delete modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [jobIdToDelete, setJobIdToDelete] = useState(null);\n  const [DeletMessage, setDeletMessage] = useState(null);\n  const handlDeleteClick = jobid => {\n    setIsModalOpen(true); // // Open the confirmation modal\n    setJobIdToDelete(jobid);\n    //const isConfirmed = confirm(\"Are you sure you want to delete this job?\");\n  };\n  const handleCancelDelete = () => {\n    setIsModalOpen(false); // Close the modal without deleting\n  };\n\n  //self closing modal logic\n  const [SelfModalOpen, setSelfModalOpen] = useState(false);\n  // const [SelfModalClose, setSelfModalClose] = useState(false);\n\n  const handleSelfClose = () => setSelfModalOpen(false);\n  //\n  const handleConfirmDelete = async () => {\n    setIsModalOpen(false);\n    try {\n      const response = await fetch(`http://localhost:2000/ManageJobs/DeleteJob/${jobIdToDelete}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setDeletMessage(\"Job deleted successfully:\", data);\n        setSelfModalOpen(true);\n      } else {\n        setDeletMessage(\"Failed to delete the job:\", response.statusText);\n      }\n    } catch (error) {\n      setDeletMessage(\"Error during deletion:\", error);\n    }\n  };\n\n  // // Usage example\n  // deleteJob(1); // Pass the job ID you want to delete\n\n  if (jobsData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid pt-5 \",\n      style: {\n        marginTop: \"100px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container bg-light clearfix container\",\n        children: [/*#__PURE__*/_jsxDEV(SelfClosingAlert, {\n          show: SelfModalOpen,\n          onClose: handleSelfClose,\n          message: DeletMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            float: \"right\"\n          },\n          className: \"btn btn-success\",\n          onClick: ShowPostModal,\n          children: \"Add new Job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: showModal,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: [modalType === \"create\" ? \"Post a Job\" : \"Update Job\", selectedJob.JOB_ID]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Company\", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"red\",\n                      fontSize: \"30px\",\n                      marginLeft: \"1px\"\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this), \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"Company\",\n                  value: values.Company,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this), errors.Company && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errors.Company\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"Description\",\n                  onChange: handleChange,\n                  value: values.Description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), errors.Description && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errors.Description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Job Title:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"Jtitle\",\n                  onChange: handleChange,\n                  value: values.Jtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), errors.Jtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errors.Jtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"Location\",\n                  onChange: handleChange,\n                  value: values.Location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this), errors.Location && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errors.Location\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Salary:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control\",\n                  type: \"number\",\n                  name: \"Salary\",\n                  onChange: handleChange,\n                  value: values.Salary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this), errors.Salary && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: errors.Salary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"btn btn-primary form-control btn-lg\",\n                  type: \"submit\",\n                  value: modalType === \"create\" ? \"Register\" : \"Save Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: err ? \"red\" : \"green\"\n              },\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-danger btn-lg\",\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container shadow bg-light container \",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Job ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Company\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Salary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"table-group-divider\",\n            children: currentData && currentData.length > 0 ? currentData.map((item, index) => item ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: (currentPage - 1) * rowsPerPage + index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.JOB_ID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.JOB_TITLE\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.COMPANY\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.LOCATION\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.SALARY\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.DESCRIPTION\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  display: \"Flex\",\n                  columnGap: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  className: \"btn btn-success\",\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => ShowUpdateModal(item),\n                  className: \"btn btn-warning\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => handlDeleteClick(item.JOB_ID),\n                  className: \"btn btn-danger\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 23\n              }, this)]\n            }, item.JOB_ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 21\n            }, this) : null) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"8\",\n                className: \"text-center\",\n                children: \"No jobs available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n            onClick: () => changePage(currentPage - 1),\n            disabled: currentPage === 1,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), [...Array(totalPages).keys()].map(page => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n            active: page + 1 === currentPage,\n            onClick: () => changePage(page + 1),\n            children: page + 1\n          }, page + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n            onClick: () => changePage(currentPage + 1),\n            disabled: currentPage === totalPages,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConfirmDeleteModal, {\n          isOpen: isModalOpen,\n          onConfirm: handleConfirmDelete,\n          onCancel: handleCancelDelete,\n          message: DeletMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container-fluid bg-light\",\n      style: {\n        marginTop: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-5 mb-4 bg-light rounded-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-fluid py-5 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"There is no jobs available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(ManageJob, \"RiuvCib+6mX2BWRSr11AjZqUmAU=\");\n_c = ManageJob;\nexport default ManageJob;\nvar _c;\n$RefreshReg$(_c, \"ManageJob\");","map":{"version":3,"names":["React","useState","useEffect","Link","Modal","Button","ConfirmDeleteModal","SelfClosingAlert","Pagination","jsxDEV","_jsxDEV","ManageJob","_s","showModal","setShow","modalType","setModalType","selectedJob","setSelectedJob","jobsData","SetJobs","values","setValues","Company","Description","Jtitle","Location","Salary","errors","setErrors","message","setMessage","err","setError","api","fetch","then","response","json","data","Jobs","catch","e","console","error","rowsPerPage","currentPage","setCurrentPage","totalPages","Math","ceil","length","startIndex","currentData","slice","changePage","newPage","handleClose","ShowPostModal","ShowUpdateModal","item","COMPANY","DESCRIPTION","JOB_TITLE","LOCATION","SALARY","handleChange","target","name","value","validate","trim","isNaN","handleSubmit","preventDefault","validationErrors","Object","keys","url","JOB_ID","method","headers","body","JSON","stringify","ok","prevJobs","job","map","isModalOpen","setIsModalOpen","jobIdToDelete","setJobIdToDelete","DeletMessage","setDeletMessage","handlDeleteClick","jobid","handleCancelDelete","SelfModalOpen","setSelfModalOpen","handleSelfClose","handleConfirmDelete","statusText","className","style","marginTop","children","show","onClose","fileName","_jsxFileName","lineNumber","columnNumber","float","onClick","onHide","Header","closeButton","Title","Body","onSubmit","color","fontSize","marginLeft","type","onChange","Footer","variant","scope","index","display","columnGap","colSpan","Prev","disabled","Array","page","Item","active","Next","isOpen","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["G:/MYL software company/Full-FrontEnd_and BackEnd-Project/Job-Portal-Project/Client/src/components/Pages/JobPage/ManageJob.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\r\n// import SelfCloseModalAlert from \"./SelfCloseModalAlert\";\r\nimport SelfClosingAlert from \"./SelfClosingAlert\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction ManageJob() {\r\n  const [showModal, setShow] = useState(false);\r\n  const [modalType, setModalType] = useState(\"create\");\r\n  const [selectedJob, setSelectedJob] = useState({});\r\n  const [jobsData, SetJobs] = useState([]);\r\n  const [values, setValues] = useState({\r\n    Company: \"\",\r\n    Description: \"\",\r\n    Jtitle: \"\",\r\n    Location: \"\",\r\n    Salary: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [err, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const api = \"http://localhost:2000/\";\r\n    fetch(api)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const jobsData = data.Jobs || [];\r\n        SetJobs(jobsData);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e.message);\r\n      });\r\n  }, []);\r\n  // pagination\r\n  var rowsPerPage = 10;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const totalPages = Math.ceil(jobsData.length / rowsPerPage);\r\n\r\n  // Calculate the data for the current page\r\n  const startIndex = (currentPage - 1) * rowsPerPage;\r\n  const currentData = jobsData.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n  // Function to change the page\r\n  const changePage = (newPage) => {\r\n    if (newPage > 0 && newPage <= totalPages) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  //end of pagination\r\n  const handleClose = () => {\r\n    setSelectedJob({});\r\n    setValues({\r\n      Company: \"\",\r\n      Description: \"\",\r\n      Jtitle: \"\",\r\n      Location: \"\",\r\n      Salary: \"\",\r\n    });\r\n    setShow(false);\r\n  };\r\n\r\n  const ShowPostModal = () => {\r\n    setShow(true);\r\n    setModalType(\"create\");\r\n    setValues({\r\n      Company: \"\",\r\n      Description: \"\",\r\n      Jtitle: \"\",\r\n      Location: \"\",\r\n      Salary: \"\",\r\n    });\r\n  };\r\n\r\n  const ShowUpdateModal = (item) => {\r\n    setShow(true);\r\n    setModalType(\"update\");\r\n    setSelectedJob(item);\r\n    setValues({\r\n      Company: item.COMPANY,\r\n      Description: item.DESCRIPTION,\r\n      Jtitle: item.JOB_TITLE,\r\n      Location: item.LOCATION,\r\n      Salary: item.SALARY,\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    let errors = {};\r\n    if (!values.Company.trim()) errors.Company = \"Company name is required.\";\r\n    if (!values.Description.trim())\r\n      errors.Description = \"Description is required.\";\r\n    if (!values.Jtitle.trim()) errors.Jtitle = \"Job title is required.\";\r\n    if (!values.Location.trim()) errors.Location = \"Location is required.\";\r\n    if (!values.Salary || isNaN(values.Salary) || values.Salary <= 0)\r\n      errors.Salary = \"Salary must be a positive number.\";\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validate();\r\n    setErrors(validationErrors);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      try {\r\n        const url =\r\n          modalType === \"create\"\r\n            ? \"http://localhost:2000/ManageJobs/PostJob\"\r\n            : `http://localhost:2000/ManageJobs/UpdateJob/${selectedJob.JOB_ID}`;\r\n        const method = modalType === \"create\" ? \"POST\" : \"PUT\"; // Assuming you have a PUT endpoint for updates\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(values),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setMessage(\r\n            modalType === \"create\"\r\n              ? \"Job posted successfully!\"\r\n              : \"Job updated successfully!\"\r\n          );\r\n          setError(false);\r\n          // Refresh the job list or update state\r\n          if (modalType === \"create\") {\r\n            SetJobs((prevJobs) => [...prevJobs, data.job]); // Assuming your API returns the created job\r\n          } else {\r\n            SetJobs((prevJobs) =>\r\n              prevJobs.map((job) =>\r\n                job.JOB_ID === selectedJob.JOB_ID ? values : job\r\n              )\r\n            );\r\n          }\r\n        } else {\r\n          setMessage(data.message || \"An error occurred.\");\r\n          setError(true);\r\n        }\r\n      } catch (err) {\r\n        setMessage(\"An unexpected error occurred.\");\r\n        setError(true);\r\n        console.error(err);\r\n      }\r\n    } else {\r\n      setMessage(\"Please fix the errors and submit again.\");\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  //for delete modal\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [jobIdToDelete, setJobIdToDelete] = useState(null);\r\n  const [DeletMessage, setDeletMessage] = useState(null);\r\n\r\n  const handlDeleteClick = (jobid) => {\r\n    setIsModalOpen(true); // // Open the confirmation modal\r\n    setJobIdToDelete(jobid);\r\n    //const isConfirmed = confirm(\"Are you sure you want to delete this job?\");\r\n  };\r\n  const handleCancelDelete = () => {\r\n    setIsModalOpen(false); // Close the modal without deleting\r\n  };\r\n\r\n  //self closing modal logic\r\n  const [SelfModalOpen, setSelfModalOpen] = useState(false);\r\n  // const [SelfModalClose, setSelfModalClose] = useState(false);\r\n\r\n  const handleSelfClose = () => setSelfModalOpen(false);\r\n  //\r\n  const handleConfirmDelete = async () => {\r\n    setIsModalOpen(false);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:2000/ManageJobs/DeleteJob/${jobIdToDelete}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDeletMessage(\"Job deleted successfully:\", data);\r\n        setSelfModalOpen(true);\r\n      } else {\r\n        setDeletMessage(\"Failed to delete the job:\", response.statusText);\r\n      }\r\n    } catch (error) {\r\n      setDeletMessage(\"Error during deletion:\", error);\r\n    }\r\n  };\r\n\r\n  // // Usage example\r\n  // deleteJob(1); // Pass the job ID you want to delete\r\n\r\n  if (jobsData) {\r\n    return (\r\n      <div className=\"container-fluid pt-5 \" style={{ marginTop: \"100px\" }}>\r\n        <div className=\"modal-container bg-light clearfix container\">\r\n          <SelfClosingAlert\r\n            show={SelfModalOpen}\r\n            onClose={handleSelfClose}\r\n            message={DeletMessage}\r\n          />\r\n          <Button\r\n            style={{ float: \"right\" }}\r\n            className=\"btn btn-success\"\r\n            onClick={ShowPostModal}\r\n          >\r\n            Add new Job\r\n          </Button>\r\n\r\n          <Modal show={showModal} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>\r\n                {modalType === \"create\" ? \"Post a Job\" : \"Update Job\"}\r\n                {selectedJob.JOB_ID}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <form onSubmit={handleSubmit}>\r\n                <div>\r\n                  <label>\r\n                    Company\r\n                    <span\r\n                      style={{\r\n                        color: \"red\",\r\n                        fontSize: \"30px\",\r\n                        marginLeft: \"1px\",\r\n                      }}\r\n                    >\r\n                      *\r\n                    </span>\r\n                    :\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"Company\"\r\n                    value={values.Company}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {errors.Company && (\r\n                    <p style={{ color: \"red\" }}>{errors.Company}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label>Description:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"Description\"\r\n                    onChange={handleChange}\r\n                    value={values.Description}\r\n                  />\r\n                  {errors.Description && (\r\n                    <p style={{ color: \"red\" }}>{errors.Description}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label>Job Title:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"Jtitle\"\r\n                    onChange={handleChange}\r\n                    value={values.Jtitle}\r\n                  />\r\n                  {errors.Jtitle && (\r\n                    <p style={{ color: \"red\" }}>{errors.Jtitle}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label>Location:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    name=\"Location\"\r\n                    onChange={handleChange}\r\n                    value={values.Location}\r\n                  />\r\n                  {errors.Location && (\r\n                    <p style={{ color: \"red\" }}>{errors.Location}</p>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label>Salary:</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    name=\"Salary\"\r\n                    onChange={handleChange}\r\n                    value={values.Salary}\r\n                  />\r\n                  {errors.Salary && (\r\n                    <p style={{ color: \"red\" }}>{errors.Salary}</p>\r\n                  )}\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <input\r\n                    className=\"btn btn-primary form-control btn-lg\"\r\n                    type=\"submit\"\r\n                    value={modalType === \"create\" ? \"Register\" : \"Save Update\"}\r\n                  />\r\n                </div>\r\n              </form>\r\n              {message && (\r\n                <p style={{ color: err ? \"red\" : \"green\" }}>{message}</p>\r\n              )}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                className=\"btn btn-danger btn-lg\"\r\n                variant=\"secondary\"\r\n                onClick={handleClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n\r\n        <div className=\"table-container shadow bg-light container \">\r\n          <table className=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">No</th>\r\n                <th scope=\"col\">Job ID</th>\r\n                <th scope=\"col\">Job Title</th>\r\n                <th scope=\"col\">Company</th>\r\n                <th scope=\"col\">Location</th>\r\n                <th scope=\"col\">Salary</th>\r\n                <th scope=\"col\">Description</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"table-group-divider\">\r\n              {currentData && currentData.length > 0 ? (\r\n                currentData.map((item, index) =>\r\n                  item ? (\r\n                    <tr key={item.JOB_ID}>\r\n                      <td>{(currentPage - 1) * rowsPerPage + index + 1}</td>\r\n                      <td>{item.JOB_ID}</td>\r\n                      <td>{item.JOB_TITLE}</td>\r\n                      <td>{item.COMPANY}</td>\r\n                      <td>{item.LOCATION}</td>\r\n                      <td>{item.SALARY}</td>\r\n                      <td>{item.DESCRIPTION}</td>\r\n                      <td style={{ display: \"Flex\", columnGap: \"10px\" }}>\r\n                        <Link className=\"btn btn-success\">View</Link>\r\n                        <button\r\n                          onClick={() => ShowUpdateModal(item)}\r\n                          className=\"btn btn-warning\"\r\n                        >\r\n                          Update\r\n                        </button>\r\n                        <Link\r\n                          onClick={() => handlDeleteClick(item.JOB_ID)}\r\n                          className=\"btn btn-danger\"\r\n                        >\r\n                          Delete\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  ) : null\r\n                )\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"8\" className=\"text-center\">\r\n                    No jobs available.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n\r\n          <Pagination className=\"justify-content-center\">\r\n            <Pagination.Prev\r\n              onClick={() => changePage(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            >\r\n              Previous\r\n            </Pagination.Prev>\r\n            {[...Array(totalPages).keys()].map((page) => (\r\n              <Pagination.Item\r\n                key={page + 1}\r\n                active={page + 1 === currentPage}\r\n                onClick={() => changePage(page + 1)}\r\n              >\r\n                {page + 1}\r\n              </Pagination.Item>\r\n            ))}\r\n            <Pagination.Next\r\n              onClick={() => changePage(currentPage + 1)}\r\n              disabled={currentPage === totalPages}\r\n            >\r\n              Next\r\n            </Pagination.Next>\r\n          </Pagination>\r\n          <ConfirmDeleteModal\r\n            isOpen={isModalOpen}\r\n            onConfirm={handleConfirmDelete}\r\n            onCancel={handleCancelDelete}\r\n            message={DeletMessage}\r\n          />\r\n\r\n          {/* <SelfCloseModalAlert\r\n            showModal={SelfModalOpen}\r\n            onClose={handleSelfClose}\r\n          \r\n          \r\n          /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <section\r\n        className=\"container-fluid bg-light\"\r\n        style={{ marginTop: \"100px\" }}\r\n      >\r\n        <div className=\"p-5 mb-4 bg-light rounded-3\">\r\n          <div className=\"container-fluid py-5 text-center\">\r\n            <h1 style={{ color: \"red\" }}>There is no jobs available</h1>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageJob;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}